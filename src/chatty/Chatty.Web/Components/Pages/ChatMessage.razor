@using Chatty.Silo.Features.Chatroom.Grains
@using Chatty.Silo.Primitives
@inject IClusterClient ClusterClient
@inject IJSRuntime JsRuntime

<MudGrid Class="chat-message-grid">
    <MudItem xs="1">
        <MudAvatar Color="Color.Primary">@(FirstCharacter(Message.Username))</MudAvatar>
    </MudItem>
    <MudItem xs="2">
        <MudText>@Message.Username</MudText>
    </MudItem>
    <MudItem xs="6">
        <MudText Typo="Typo.body1">@Message.Timestamp.ToString("yyyy-MM-dd hh:mm:ss")</MudText>
    </MudItem>
    <MudItem xs="3">
        <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="@DeleteMessage">Delete
        </MudButton>
    </MudItem>
    
    <MudItem xs="12">
        <MudText>@Message.Message</MudText>
    </MudItem>
    <MudSpacer></MudSpacer>
</MudGrid>

@code {

    // Parameters
    [Parameter]
    public Chatty.Silo.Primitives.ChatMessage Message { get; set; } = null!;

    // State

    // Methods
    private async Task DeleteMessage()
    {
        var confirmedDelete = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this message?");
        if (!confirmedDelete)
        {
            return;
        }

        var chatRoomGrain = ClusterClient.GetGrain<IChatRoom>(Message.ChatRoomId ?? "all");
        await chatRoomGrain.DeleteMessage(Message);
    }
    
    private string FirstCharacter(Username username) => username.Value[..1];
}