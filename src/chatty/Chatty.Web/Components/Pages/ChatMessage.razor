@using Chatty.Silo
@inject IClusterClient ClusterClient
@inject IJSRuntime JsRuntime

<div class="chat-message">
    <div class="message-info">
        <span class="username">@Message.Username</span>
        <span class="timestamp">@Message.Timestamp.ToString() || </span>
        <span class="timestamp">@Message.TimeStampNoda.ToString()</span>
        <button class="delete-button" @onclick="DeleteMessage">Delete</button>
    </div>
    <div class="message-text">@Message.Message</div>

</div>

@code {

    // Parameters
    [Parameter]
    public Chatty.Silo.Primitives.ChatMessage Message { get; set; } = null!;

    // State

    // Methods
    private async Task DeleteMessage()
    {
        var confirmedDelete = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this message?");
        if (!confirmedDelete)
        {
            return;
        }

        var chatRoomGrain = ClusterClient.GetGrain<IChatRoom>(Message.ChatRoomId ?? "all");
        await chatRoomGrain.DeleteMessage(Message);
    }
}